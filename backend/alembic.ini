# Alembic configuration file

[alembic]
# Path to migration scripts
script_location = alembic

# Template used to generate migration files
# file_template = %%(rev)s_%%(slug)s

# Timezone for timestamps
# timezone =

# max length of characters to apply to the "slug" field
# truncate_slug_length = 40

# Set to 'true' to run the environment during the 'revision' command
# revision_environment = false

# Set to 'true' to allow .pyc and .pyo files without a source .py file to be
# detected as revisions in the versions/ directory
# sourceless = false

# version location specification
# version_locations = %(here)s/bar %(here)s/bat alembic/versions

# Version path separator
# version_path_separator = os  # Use os.pathsep. Default configuration used for new projects.
# version_path_separator = :
# version_path_separator = ;
# version_path_separator = space

# The output encoding used when revision files are written from env.py
# output_encoding = utf-8

# sqlalchemy.url = driver://user:pass@localhost/dbname


[post_write_hooks]
# Post-write hooks configuration
# format using "black" - use the console_scripts runner, against the "black" entrypoint
# hooks = black
# black.type = console_scripts
# black.entrypoint = black
# black.options = -l 79 REVISION_SCRIPT_FILENAME

# Logging configuration
[loggers]
keys = root,sqlalchemy,alembic

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = WARN
handlers = console
qualname =

[logger_sqlalchemy]
level = WARN
handlers =
qualname = sqlalchemy.engine

[logger_alembic]
level = INFO
handlers =
qualname = alembic

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(levelname)-5.5s [%(name)s] %(message)s
datefmt = %H:%M:%S

