version: '3.9'

services:
  db:
    image: postgres:16
    container_name: protega-db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - protega-network

  api:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: protega-api
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      API_PORT: ${API_PORT}
      STRIPE_SECRET_KEY: ${STRIPE_SECRET_KEY}
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRES_MIN: ${JWT_EXPIRES_MIN}
      ENV: ${ENV:-development}
    ports:
      - "${API_PORT}:8000"
    volumes:
      - ./backend:/app
    depends_on:
      db:
        condition: service_healthy
    networks:
      - protega-network
    command: /bin/bash /app/uvicorn.sh

  web:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: protega-web
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:${API_PORT}
    ports:
      - "${WEB_PORT}:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    depends_on:
      - api
    networks:
      - protega-network
    command: npm run dev

volumes:
  postgres_data:

networks:
  protega-network:
    driver: bridge

